version: '3.2'

services:
  kafka_zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: kafka_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_net

  kafka_broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka_broker
    depends_on:
      - kafka_zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka_zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka_broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - broker_data:/var/lib/kafka/data
    networks:
      - kafka_net
    ports:
      - "9092:9092"

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2846
      POSTGRES_DB: friends_vpn
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - kafka_net

  telegram_bot:
    build:
      context: .
      dockerfile: telegram_bot/Dockerfile
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      DB_NAME: friends_vpn
      DB_USER: postgres
      DB_PASS: 2846
      DB_HOST: postgres
      KAFKA_JOBS_TOPIC: jobs
      KAFKA_DONE_TOPIC: done
      KAFKA_SERVERS: "kafka_broker:29092"
      DEBUG: "no"
      DELAY: 50
    networks:
      - kafka_net

  wireguard_vpn:
    build:
      context: .
      dockerfile: wireguard_serv/Dockerfile
    environment:
      DB_NAME: friends_vpn
      DB_USER: postgres
      DB_PASS: 2846
      DB_HOST: postgres
      KAFKA_JOBS_TOPIC: jobs
      KAFKA_DONE_TOPIC: done
      KAFKA_SERVERS: "kafka_broker:29092"
      DEBUG: "no"
      DELAY: 50
      PUID: 1000
      PGID: 1000
      PEERS: 1
      TZ: Europe/London
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    networks:
      - kafka_net
51832
volumes:
  broker_data:
  pg_data:

networks:
  kafka_net: