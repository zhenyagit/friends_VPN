version: '3.2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_net

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - broker_data:/var/lib/kafka/data
    networks:
      - kafka_net
    ports:
      - "9092:9092"


  postgres:
    image: postgres:14.3
    container_name: postgres
    #    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2846
      - POSTGRES_DB=friends_vpn
    volumes:
      - moodle_pgdata:/var/lib/postgresql/data
    networks:
      - kafka_net
    ports:
      - "5432:5432"

  wireguard_vpn:
    build: ./wireguard_serv
    #    container_name: wireguard_VPN
    environment:
      DELAY: 30
    networks:
      - kafka_net

volumes:
  broker_data:
  moodle_pgdata:

networks:
  kafka_net: